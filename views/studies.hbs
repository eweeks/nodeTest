<div class="container">
    <p>Both Grand Teton and Yellowstone conduct general soundscape studies that shed insight into the health of
    an ecosystem, and provide an archive of natural sounds. Additionally, both parks conduct soundscape research
    to look at specific impacts of human produced sound on the ecosystem. </p>
    <h2>Studying Soundscapes in Grand Tetons</h2>
    <p>Grand Teton National Park is the only National Park with a commercial airport inside of its boundaries.
    What impact does the noise from the airport have on the ecosystems in Grand Teton? Are there ways to negate
      effects of the airport noise? Such questions prompted a soundscape study in Grand Tetons looking at sound from the airport.
    Sound data was collected from a variety of locations in the park, including at the airport itself. Research looked article
  how far reaching was the noise from the airport and what effects it might have. The information was also used to suggest
changes to the typical flight paths into the airport in order to negate the impacts.</p>
<p><img width="500px" src="images/GRTEJHAL_1.jpg"></p>
  </div>
  <div class="container">
    <h2>Studying Soundscapes in Yellowstone</h2>
    <p>Visiting Yellowstone in winter is very different than summer. In winter, the majority of the park
    is only accessible by skiing, snowshoeing, snowmobile or snowcoach. While most of the park is very quiet input
  in winter, the areas with nowmobile usage see peaks of very intense  sounds. As winter is a very stressful time of
year for the wildlife in Yellowstone, biologist wonder what impact the noise from snow vehicles might have on the animals.</p>
<p>Studies looked at how far the noise from snowmobiles reached and the percentage of the day when noise from them could be heard.
Results from the studies were used to adjust Yellowstone's winter use plan.</p>
<p><img width="500px" src="images/Screen Shot 2016-04-04 at 3.42.24 PM.png"></p><p>Above: Spectrogram showing average
sound levels during winter in Yellowstone. High sound levels are clearly visible along the set snow vehicle routes and
are drastically different that areas where snowvehicle use is not allowed.</p>
  </div>
</div>




<div class="magnify " id="vis" width="800" height="300">
  	<div class="large"></div>
    <img class="small" height="260" src="images/MOPO_Elk-Grey.png">
</div>
{{#extend "scripts"}}
<script>
var native_width = 0;
	var native_height = 0;

	//Now the mousemove function
	$(".magnify").mousemove(function(e){
		//When the user hovers on the image, the script will first calculate
		//the native dimensions if they don't exist. Only after the native dimensions
		//are available, the script will show the zoomed version.
		if(!native_width && !native_height)
		{
			//This will create a new image object with the same image as that in .small
			//We cannot directly get the dimensions from .small because of the
			//width specified to 200px in the html. To get the actual dimensions we have
			//created this image object.
			var image_object = new Image();
			image_object.src = $(".small").attr("src");

			//This code is wrapped in the .load function which is important.
			//width and height of the object would return 0 if accessed before
			//the image gets loaded.
			native_width = image_object.width;
			native_height = image_object.height;
		}
		else
		{
			//x/y coordinates of the mouse
			//This is the position of .magnify with respect to the document.
			var magnify_offset = $(this).offset();
			//We will deduct the positions of .magnify from the mouse positions with
			//respect to the document to get the mouse positions with respect to the
			//container(.magnify)
			var mx = e.pageX - magnify_offset.left;
			var my = e.pageY - magnify_offset.top;

			//Finally the code to fade out the glass if the mouse is outside the container
			if(mx < $(this).width() && my < $(this).height() && mx > 0 && my > 0)
			{
				$(".large").fadeIn(100);
			}
			else
			{
				$(".large").fadeOut(100);
			}
			if($(".large").is(":visible"))
			{
				//The background position of .large will be changed according to the position
				//of the mouse over the .small image. So we will get the ratio of the pixel
				//under the mouse pointer with respect to the image and use that to position the
				//large image inside the magnifying glass
				var rx = Math.round(mx/$(".small").width()*native_width - $(".large").width()/2)*-1;
				var ry = Math.round(my/$(".small").height()*native_height - $(".large").height()/2)*-1;
				var bgp = rx + "px " + ry + "px";

				//Time to move the magnifying glass with the mouse
				var px = mx - $(".large").width()/2;
				var py = my - $(".large").height()/2;
				//Now the glass moves with the mouse
				//The logic is to deduct half of the glass's width and height from the
				//mouse coordinates to place it with its center at the mouse coordinates

				//If you hover on the image now, you should see the magnifying glass in action
				$(".large").css({left: px, top: py, backgroundPosition: bgp});
			}
		}
	})

</script>
{{/extend}}
